(this.webpackJsonp=this.webpackJsonp||[]).push([["pevr-payever-integration"],{"7Tz9":function(e,t){e.exports='{% block sw_meteor_page %}\n    <div class="sw-meteor-page" :class="pageClasses">\n        <div class="sw-meteor-page__body" ref="pageBody">\n            <header class="sw-meteor-page__head-area" ref="pageHeader">\n                <div class="sw-meteor-page__head-area-top-bar-content">\n                    <slot name="search-bar">\n                        {% block sw_meteor_page_seach_bar %}\n                            <sw-search-bar></sw-search-bar>\n                        {% endblock %}\n                    </slot>\n                </div>\n\n                <div class="sw-meteor-page__head-area-global-actions">\n                    {% block sw_meteor_page_notification_center %}\n                        <sw-notification-center></sw-notification-center>\n                    {% endblock %}\n                </div>\n\n                <div class="sw-meteor-page__smart-bar">\n                    <div class="sw-meteor-page__smart-bar-navigation">\n                        <slot name="smart-bar-back">\n                            {% block sw_meteor_page_navigation %}\n                                <sw-meteor-navigation></sw-meteor-navigation>\n                            {% endblock %}\n                        </slot>\n                    </div>\n\n                    <div class="payever-sw-meteor-page__smart-bar-content">\n                        <div class="sw-meteor-page__smart-bar-module-info">\n                            <div v-if="!hideIcon && hasIconOrIconSlot" class="sw-meteor-page__smart-bar-module-icon">\n                                <slot name="smart-bar-icon">\n                                    {% block sw_meteor_page_smart_bar_icon %}\n                                        <sw-icon v-if="hasIcon" :name="module.icon" :color="pageColor"></sw-icon>\n                                    {% endblock %}\n                                </slot>\n                            </div>\n\n                            <div class="sw-meteor-page__smart-bar-header">\n                                <h2 class="sw-meteor-page__smart-bar-title">\n                                    <slot name="smart-bar-header">\n                                        {% block sw_meteor_page_smart_bar_title %}\n                                            <template v-if="module && module.title">\n                                                {{ $tc(module.title) }}\n                                            </template>\n                                        {% endblock %}\n                                    </slot>\n                                </h2>\n\n                                <div class="sw-meteor-page__smart-bar-meta">\n                                    {% block sw_meteor_page_smart_bar_meta %}\n                                        <slot name="smart-bar-header-meta"></slot>\n                                    {% endblock %}\n                                </div>\n                            </div>\n\n                            <div class="sw-meteor-page__smart-bar-description">\n                                {% block sw_meteor_page_smart_bar_description %}\n                                    <slot name="smart-bar-description"></slot>\n                                {% endblock %}\n                            </div>\n                        </div>\n\n                        <div class="payever-sw-meteor-page__smart-bar-actions">\n                            {% block sw_meteor_page_smart_bar_actions %}\n                                <sw-button :isLoading="isLoading"\n                                           class="sw-extension-config__set-sandbox-action payever-extension-config-button"\n                                           @click.prevent="setSandboxApiKeys"\n                                           v-if="namespace === \'PevrPayeverIntegration\'">\n                                    {{ $tc(\'payever-plugin-config.setApi.buttonTitle\') }}\n                                </sw-button>\n                                <sw-button :isLoading="isLoading"\n                                           class="sw-extension-config__save-action payever-extension-config-button"\n                                           @click.prevent="onSync"\n                                           :disabled="isLoading || !clientSecretFilled || !clientIdFilled || !businessIdFilled"\n                                           v-if="namespace === \'PevrPayeverIntegration\'">\n                                    {{ $tc(\'payever-plugin-config.synchronize.buttonTitle\') }}\n                                </sw-button>\n                                <sw-button :isLoading="isLoading"\n                                           class="sw-extension-config__download_log-action payever-extension-config-button"\n                                           @click.prevent="downloadLog"\n                                           :disabled="isLoading"\n                                           v-if="namespace === \'PevrPayeverIntegration\'">\n                                    {{ $tc(\'payever-plugin-config.downloadLog.buttonTitle\') }}\n                                </sw-button>\n                                <slot name="smart-bar-actions"></slot>\n                            {% endblock %}\n                        </div>\n\n                        <div class="sw-meteor-page__smart-bar-context-buttons">\n                            {% block sw_meteor_page_smart_bar_context_buttons %}\n                                <template>\n                                    <slot name="smart-bar-context-buttons"></slot>\n                                </template>\n                            {% endblock %}\n                        </div>\n                    </div>\n                </div>\n\n                <div v-if="hasTabs" class="sw-meteor-page__smart-bar-tabs">\n                    {% block sw_meteor_page_smart_bar_tabs %}\n                        <sw-tabs @new-item-active="emitNewTab" :small="false">\n                            <template #default>\n                                <slot name="page-tabs"></slot>\n                            </template>\n                        </sw-tabs>\n                    {% endblock %}\n                </div>\n            </header>\n            <main class="sw-meteor-page__content">\n                {% block sw_meteor_page_content %}\n                    <sw-alert variant="info"  v-if="namespace === \'PevrPayeverIntegration\'">\n                        {{ $tc(\'payever-plugin-config.support.message\') }}\n                        <br><br>\n                        <sw-button  :isLoading="isLoading"\n                                    class="sw-system-config_support"\n                                    @click.prevent="support" >\n                            {{ $tc(\'payever-plugin-config.support.buttonTitle\') }}\n                        </sw-button>\n                    </sw-alert>\n                    <br><br>\n                    <div v-if="fullWidth" class="sw-meteor-page__scrollable-content">\n                        <slot></slot>\n                    </div>\n\n                    <template v-else>\n                        <slot></slot>\n                    </template>\n                {% endblock %}\n            </main>\n        </div>\n    </div>\n{% endblock %}\n'},ACkG:function(e,t,n){"use strict";n.r(t);const{Application:i}=Shopware,s=Shopware.Classes.ApiService;class a extends s{constructor(e,t,n="payever"){super(e,t,n)}isLegacy(){let e=!1;const t=Shopware.Context.app.config.version.match(/(\d+)\.(\d+)\.(\d+)/i);return t[2]&&parseInt(t[2])<4&&(e=!0),e}}i.addServiceProvider("PayeverVersionService",(e=>{const t=i.getContainer("init");return new a(t.httpClient,e.loginService)}));const{Application:r}=Shopware,o=Shopware.Classes.ApiService;class c extends o{constructor(e,t,n="payever"){super(e,t,n)}getNotificationsPath(){return`_action/${this.getApiBasePath()}/plugin/notifications`}getNotifications(){return this.httpClient.get(this.getNotificationsPath(),{headers:this.getBasicHeaders()}).then((e=>o.handleResponse(e)))}getSubscriptionPath(){return`_action/${this.getApiBasePath()}/products-and-inventory/toggle-subscription`}toggleSubscription(){return this.httpClient.post(this.getSubscriptionPath(),{headers:this.getBasicHeaders()}).then((e=>o.handleResponse(e)))}getExportPath(){return`_action/${this.getApiBasePath()}/products-and-inventory/export`}enqueueProductsAndInventoryExport(){return this.httpClient.post(this.getExportPath(),{headers:this.getBasicHeaders()}).then((e=>o.handleResponse(e)))}getLogPath(){return`_action/${this.getApiBasePath()}/download-payever-log`}openLog(){return this.httpClient.get(this.getLogPath(),{headers:this.getBasicHeaders()}).then((e=>e))}}var l=c;r.addServiceProvider("PayeverPluginService",(e=>{const t=r.getContainer("init");return new c(t.httpClient,e.loginService)}));const{Application:d}=Shopware;class p extends l{getNotificationsPath(){return`${this.getApiBasePath()}/plugin/notifications`}getSubscriptionPath(){return`${this.getApiBasePath()}/products-and-inventory/toggle-subscription`}getExportPath(){return`${this.getApiBasePath()}/products-and-inventory/export`}getLogPath(){return`${this.getApiBasePath()}/download-payever-log`}}d.addServiceProvider("PayeverPluginLegacyService",(e=>{const t=d.getContainer("init");return new p(t.httpClient,e.loginService)}));const{Application:u}=Shopware,g=Shopware.Classes.ApiService;class h extends g{constructor(e,t,n="payever",i,s,a){super(e,t,n),this.payeverPluginService=i,this.payeverPluginLegacyService=s,this.payeverVersionService=a}enqueueProductsAndInventoryExport(){let e=this.payeverPluginService;return this.payeverVersionService.isLegacy()&&(e=this.payeverPluginLegacyService),e.enqueueProductsAndInventoryExport()}toggleSubscription(){let e=this.payeverPluginService;return this.payeverVersionService.isLegacy()&&(e=this.payeverPluginLegacyService),e.toggleSubscription()}}u.addServiceProvider("PayeverPluginWrapperService",(e=>{const t=u.getContainer("init"),n=u.getContainer("nested");return new h(t.httpClient,e.loginService,"payever",n.service.PayeverPluginService,n.service.PayeverPluginLegacyService,n.service.PayeverVersionService)}));const{Application:v}=Shopware,m=Shopware.Classes.ApiService;class y extends m{constructor(e,t,n="payever"){super(e,t,n)}getSyncPath(){return`_action/${this.getApiBasePath()}/synchronization`}synchronize(){return this.httpClient.get(this.getSyncPath(),{headers:this.getBasicHeaders()}).then((e=>m.handleResponse(e)))}getAllowedActions(e,t){const n=`_action/${this.getApiBasePath()}/get-allowed-actions`;return this.httpClient.post(n,{transactionId:e,salesChannelId:t},{headers:this.getBasicHeaders()}).then((e=>m.handleResponse(e)))}getPaymentDetails(e,t){const n=`_action/${this.getApiBasePath()}/data/get-payment-details`;return this.httpClient.post(n,{paymentId:e,salesChannelId:t},{headers:this.getBasicHeaders()}).then((e=>m.handleResponse(e)))}getPaymentTotals(e){const t=`_action/${this.getApiBasePath()}/data/get-payment-totals`;return this.httpClient.post(t,{orderId:e},{headers:this.getBasicHeaders()}).then((e=>m.handleResponse(e)))}getOrderItems(e){const t=`_action/${this.getApiBasePath()}/data/get-order-items`;return this.httpClient.post(t,{orderId:e},{headers:this.getBasicHeaders()}).then((e=>m.handleResponse(e)))}cancelPayment(e){return this.doPaymentAction(e,"cancel")}shippingPayment(e){return this.doPaymentAction(e,"shipping_goods")}refundPayment(e){return this.doPaymentAction(e,"refund")}doPaymentAction(e,t){const n=`_action/${this.getApiBasePath()}/${e}`;return this.httpClient.post(n,t,{headers:this.getBasicHeaders()}).then((e=>m.handleResponse(e)))}}var f=y;v.addServiceProvider("PayeverPaymentService",(e=>{const t=v.getContainer("init");return new y(t.httpClient,e.loginService)}));const{Application:b}=Shopware;class w extends f{getSyncPath(){return`${this.getApiBasePath()}/synchronization`}}b.addServiceProvider("PayeverPaymentLegacyService",(e=>{const t=b.getContainer("init");return new w(t.httpClient,e.loginService)}));const{Application:P}=Shopware,S=Shopware.Classes.ApiService;class _ extends S{constructor(e,t,n="payever",i,s,a){super(e,t,n),this.payeverPaymentService=i,this.payeverPaymentLegacyService=s,this.payeverVersionService=a}getAllowedActions(e,t){let n=this.payeverPaymentService;return this.payeverVersionService.isLegacy()&&(n=this.payeverPaymentLegacyService),n.getAllowedActions(e,t)}getPaymentDetails(e,t){let n=this.payeverPaymentService;return this.payeverVersionService.isLegacy()&&(n=this.payeverPaymentLegacyService),n.getPaymentDetails(e,t)}getPaymentTotals(e){let t=this.payeverPaymentService;return this.payeverVersionService.isLegacy()&&(t=this.payeverPaymentLegacyService),t.getPaymentTotals(e)}getOrderItems(e){let t=this.payeverPaymentService;return this.payeverVersionService.isLegacy()&&(t=this.payeverPaymentLegacyService),t.getOrderItems(e)}doPaymentAction(e,t){let n=this.payeverPaymentService;return this.payeverVersionService.isLegacy()&&(n=this.payeverPaymentLegacyService),n.doPaymentAction(e,t)}}P.addServiceProvider("PayeverPaymentWrapperService",(e=>{const t=P.getContainer("init"),n=P.getContainer("nested");return new _(t.httpClient,e.loginService,"payever",n.service.PayeverPaymentService,n.service.PayeverPaymentLegacyService,n.service.PayeverVersionService)}));var A=n("obeB"),T=n.n(A);const{Component:I,Mixin:C}=Shopware;I.override("sw-plugin-config",{template:T.a,inject:["PayeverPaymentLegacyService","PayeverPluginLegacyService","systemConfigApiService"],mixins:[C.getByName("notification")],data(){const e=`${this.$route.params.namespace}.config`;return{isLoading:!1,namespace:this.$route.params.namespace,domain:e,salesChannelId:null,config:{},actualConfigData:{},clientIdFilled:!1,clientSecretFilled:!1,businessIdFilled:!1}},created(){this.checkApiKeys(),this.notify()},methods:{notify(){this.PayeverPluginLegacyService.getNotifications().then((e=>{e.forEach((e=>{this.createNotificationInfo({title:e.title,message:e.message})}))}))},checkApiKeys(){this.systemConfigApiService.getValues(this.domain).then((e=>{this.clientIdFilled=!!e["PevrPayeverIntegration.config.clientId"],this.clientSecretFilled=!!e["PevrPayeverIntegration.config.clientSecret"],this.businessIdFilled=!!e["PevrPayeverIntegration.config.businessUuid"],this.config=e}))},support(e){window.zESettings={analytics:!1};var t=document.createElement("script");return t.src="https://static.zdassets.com/ekr/snippet.js?key=775ae07f-08ee-400e-b421-c190d7836142",t.id="ze-snippet",t.onload=function(){window.zE&&window.zE("webWidget","open"),window.zE&&window.zE("webWidget:on","open",(function(){e.target.innerText="Need help? Chat with us!"}))},document.head.appendChild(t),e.target.innerText="Loading chat...",e.preventDefault(),!1},onSync(){this.isLoading=!0,this.PayeverPaymentLegacyService.synchronize().then((e=>{if(e.synchronizationValid)this.createNotificationSuccess({title:this.$tc("payever-plugin-config.synchronize.successTitle"),message:this.$tc("payever-plugin-config.synchronize.successMessage")}),e.noticeMessages.forEach((e=>{this.createNotificationInfo({title:this.$tc("payever-plugin-config.synchronize.noticeTitle"),message:e})}));else{let t=e.errorMessage;401===e.code&&(t=this.$tc("payever-plugin-config.synchronize.wrongCredentials")),this.createNotificationError({title:this.$tc("payever-plugin-config.synchronize.errorTitle"),message:t})}})).catch((e=>{this.createNotificationError({title:e.name,message:e.message})})).finally((()=>{this.isLoading=!1}))},setSandboxApiKeys(){this.isLoading=!0,this.config["PevrPayeverIntegration.config.isSandbox"]=!0,this.config["PevrPayeverIntegration.config.clientId"]="1454_2ax8i5chkvggc8w00g8g4sk80ckswkw0c8k8scss40o40ok4sk",this.config["PevrPayeverIntegration.config.clientSecret"]="22uvxi05qlgk0wo8ws8s44wo8ccg48kwogoogsog4kg4s8k8k",this.config["PevrPayeverIntegration.config.businessUuid"]="payever",this.systemConfigApiService.saveValues(this.config).then((e=>{this.createNotificationSuccess({title:this.$tc("payever-plugin-config.setApi.successTitle"),message:this.$tc("payever-plugin-config.setApi.successMessage")})})).catch((e=>{this.createNotificationError({title:e.name,message:e.message})})).finally((()=>{this.checkApiKeys(),this.isLoading=!1,window.location.reload()}))},downloadLog(e){this.PayeverPluginLegacyService.openLog().then((e=>{if(e.data){let t="payever.log";if(e.headers&&e.headers["content-disposition"]){let n="filename=",i=e.headers["content-disposition"].indexOf(n);-1!==i&&(t=e.headers["content-disposition"].substr(i+n.length))}let n=new Blob([e.data]),i=document.createElement("a");i.href=window.URL.createObjectURL(n),i.download=t,i.click()}})).catch((e=>{this.createNotificationError({title:e.name,message:e.message})}))}}});var k=n("7Tz9"),L=n.n(k);n("IGf9");const{Component:$,Mixin:x}=Shopware;$.override("sw-meteor-page",{template:L.a,inject:["PayeverPaymentService","PayeverPluginService","systemConfigApiService"],mixins:[x.getByName("notification")],data(){const e=`${this.$route.params.namespace}.config`;return{isLoading:!1,namespace:this.$route.params.namespace,domain:e,salesChannelId:null,config:{},actualConfigData:{},clientIdFilled:!1,clientSecretFilled:!1,businessIdFilled:!1}},created(){this.checkApiKeys(),this.notify()},methods:{notify(){this.PayeverPluginService.getNotifications().then((e=>{e.forEach((e=>{this.createNotificationInfo({title:e.title,message:e.message})}))}))},checkApiKeys(){this.systemConfigApiService.getValues(this.domain).then((e=>{this.clientIdFilled=!!e["PevrPayeverIntegration.config.clientId"],this.clientSecretFilled=!!e["PevrPayeverIntegration.config.clientSecret"],this.businessIdFilled=!!e["PevrPayeverIntegration.config.businessUuid"],this.config=e}))},support(e){window.zESettings={analytics:!1};var t=document.createElement("script");return t.src="https://static.zdassets.com/ekr/snippet.js?key=775ae07f-08ee-400e-b421-c190d7836142",t.id="ze-snippet",t.onload=function(){window.zE&&window.zE("webWidget","open"),window.zE&&window.zE("webWidget:on","open",(function(){e.target.innerText="Need help? Chat with us!"}))},document.head.appendChild(t),e.target.innerText="Loading chat...",e.preventDefault(),!1},onSync(){this.isLoading=!0,this.PayeverPaymentService.synchronize().then((e=>{if(e.synchronizationValid)this.createNotificationSuccess({title:this.$tc("payever-plugin-config.synchronize.successTitle"),message:this.$tc("payever-plugin-config.synchronize.successMessage")}),e.noticeMessages.forEach((e=>{this.createNotificationInfo({title:this.$tc("payever-plugin-config.synchronize.noticeTitle"),message:e})}));else{let t=e.errorMessage;401===e.code&&(t=this.$tc("payever-plugin-config.synchronize.wrongCredentials")),this.createNotificationError({title:this.$tc("payever-plugin-config.synchronize.errorTitle"),message:t})}})).catch((e=>{this.createNotificationError({title:e.name,message:e.message})})).finally((()=>{this.isLoading=!1}))},setSandboxApiKeys(){this.isLoading=!0,this.config["PevrPayeverIntegration.config.isSandbox"]=!0,this.config["PevrPayeverIntegration.config.clientId"]="1454_2ax8i5chkvggc8w00g8g4sk80ckswkw0c8k8scss40o40ok4sk",this.config["PevrPayeverIntegration.config.clientSecret"]="22uvxi05qlgk0wo8ws8s44wo8ccg48kwogoogsog4kg4s8k8k",this.config["PevrPayeverIntegration.config.businessUuid"]="payever",this.systemConfigApiService.saveValues(this.config).then((e=>{this.createNotificationSuccess({title:this.$tc("payever-plugin-config.setApi.successTitle"),message:this.$tc("payever-plugin-config.setApi.successMessage")})})).catch((e=>{this.createNotificationError({title:e.name,message:e.message})})).finally((()=>{this.checkApiKeys(),this.isLoading=!1,window.location.reload()}))},downloadLog(e){this.PayeverPluginService.openLog().then((e=>{if(e.data){let t="payever.log";if(e.headers&&e.headers["content-disposition"]){let n="filename=",i=e.headers["content-disposition"].indexOf(n);-1!==i&&(t=e.headers["content-disposition"].substr(i+n.length))}let n=new Blob([e.data]),i=document.createElement("a");i.href=window.URL.createObjectURL(n),i.download=t,i.click()}})).catch((e=>{this.createNotificationError({title:e.name,message:e.message})}))}}});var E=n("rSPY"),F=n.n(E);const{Component:z,Mixin:M}=Shopware;z.register("sw-products-and-inventory-toggle-subscription",{template:F.a,inject:["PayeverPluginWrapperService","systemConfigApiService"],mixins:[M.getByName("notification")],data(){const e=`${this.$route.params.namespace}.config`;return{isLoading:!1,namespace:this.$route.params.namespace,domain:e,salesChannelId:null,config:{},actualConfigData:{},clientIdFilled:!1,clientSecretFilled:!1,businessIdFilled:!1,buttonClass:"sw-products-and-inventory-toggle-subscription-button"}},created(){this.loadPayeverConfig()},methods:{loadPayeverConfig(){this.systemConfigApiService.getValues(this.domain).then((e=>{this.clientIdFilled=!!e["PevrPayeverIntegration.config.clientId"],this.clientSecretFilled=!!e["PevrPayeverIntegration.config.clientSecret"],this.businessIdFilled=!!e["PevrPayeverIntegration.config.businessUuid"],this.config=e;var t=document.getElementsByClassName(this.buttonClass)[0];t&&(e["PevrPayeverIntegration.config.isProductsSyncEnabled"]?t.innerText=this.$tc("payever-plugin-config.productSynchronization.subscriptionDisableTitle"):t.innerText=this.$tc("payever-plugin-config.productSynchronization.subscriptionEnableTitle"))}))},toggleSubscription(e){this.PayeverPluginWrapperService.toggleSubscription().then((t=>{let n=!1,i=document.getElementsByName("PevrPayeverIntegration.config.isProductsSyncEnabled")[0];t.isActive?(n=!0,e.target.innerText=this.$tc("payever-plugin-config.productSynchronization.subscriptionDisableTitle"),this.displayProductSynchronizationMessage(this.$tc("payever-plugin-config.productSynchronization.subscriptionEnabledSuccessMessage")),window.location.reload()):t.errors.length>0?(this.createNotificationError({title:this.$tc("payever-plugin-config.productSynchronization.subscriptionFailedTitle"),message:t.errors.join(",")}),window.location.reload()):(e.target.innerText=this.$tc("payever-plugin-config.productSynchronization.subscriptionEnableTitle"),this.displayProductSynchronizationMessage(this.$tc("payever-plugin-config.productSynchronization.subscriptionDisabledSuccessMessage")),window.location.reload()),i&&(i.checked=n)})).catch((e=>{this.createNotificationError({title:e.name,message:e.message})}))},displayProductSynchronizationMessage(e){this.createNotificationSuccess({title:this.$tc("payever-plugin-config.productSynchronization.title"),message:e})}}});var N=n("qnkV"),R=n.n(N);const{Component:B,Mixin:D}=Shopware;B.register("sw-products-and-inventory-export",{template:R.a,inject:["PayeverPluginWrapperService","systemConfigApiService"],mixins:[D.getByName("notification")],data(){const e=`${this.$route.params.namespace}.config`;return{isLoading:!1,namespace:this.$route.params.namespace,domain:e,salesChannelId:null,config:{},actualConfigData:{},isProductsSyncEnabledFilled:!1,isProductsOutwardSyncEnabledFilled:!1}},created(){this.loadPayeverConfig()},methods:{loadPayeverConfig(){this.systemConfigApiService.getValues(this.domain).then((e=>{this.isProductsSyncEnabledFilled=!!e["PevrPayeverIntegration.config.isProductsSyncEnabled"],this.isProductsOutwardSyncEnabledFilled=!!e["PevrPayeverIntegration.config.isProductsOutwardSyncEnabled"],this.config=e}))},enqueueProductsAndInventoryExport(e){this.isLoading=!0,this.PayeverPluginWrapperService.enqueueProductsAndInventoryExport().then((e=>{e.success?this.displayProductSynchronizationMessage(this.$tc("payever-plugin-config.productSynchronization.exportSuccessMessage")):this.createNotificationError({message:e.errors&&e.errors.length>0?e.errors.join(", "):"Unknown error"})})).catch((e=>{this.createNotificationError({title:e.name,message:e.message})})).finally((()=>{this.isLoading=!1}))},displayProductSynchronizationMessage(e){this.createNotificationSuccess({title:this.$tc("payever-plugin-config.productSynchronization.title"),message:e})}}});var q=n("uO5R"),O=n.n(q);n("lUXN");const{Component:V,Mixin:W,State:G}=Shopware,{Criteria:K}=Shopware.Data;V.override("sw-order-detail-base",{template:O.a,inject:["PayeverPaymentWrapperService"],mixins:[W.getByName("notification")],watch:{orderStateChange(){this.isActionLoading||(this.isActionLoading=!0,this.updateAllowedActions())}},computed:{orderStateChange(){return this.orderOptions&&this.transactionOptions&&this.deliveryOptions},orderStore:()=>G.getStore("order"),orderRepository(){return this.repositoryFactory.create("order")}},data:()=>({isActionLoading:!1,allowedActions:[],paymentTotals:{amount:0,captured:0,refunded:0,cancelled:0,availableForCapturing:0,availableForCancelling:0,availableForRefunding:0,isManual:!1},orderItems:[],input:{capture:0,cancel:0,refund:0}}),created(){this.isActionLoading||(this.isActionLoading=!0,this.updateAllowedActions())},methods:{updateAllowedActions(){const e=new K(1,100);e.addAssociation("currency"),e.addAssociation("transactions"),e.addAssociation("lineItems"),e.addAssociation("deliveries"),this.orderRepository.get(this.orderId,Shopware.Context.api,e).then((e=>{const t=e.transactions.first();if(!this.isPayeverPayment(t))return void(this.isActionLoading=!1);const n=t.customFields.payever_transaction_id;if(!n)return void(this.isActionLoading=!1);let i=null;this.order&&(i=this.order.salesChannelId),!i&&e&&(i=e.salesChannelId),i?(this.PayeverPaymentWrapperService.getAllowedActions(n,i).then((e=>{this.allowedActions=e,this.isActionLoading=!1})).catch((()=>{this.isActionLoading=!1})),this.PayeverPaymentWrapperService.getPaymentTotals(this.orderId).then((e=>{for(const[t,n]of Object.entries(e))"isManual"!==t&&(e[t]=parseFloat(n.toFixed(2)));this.input.capture=e.availableForCapturing,this.input.cancel=e.availableForCancelling,this.input.refund=e.availableForRefunding,this.paymentTotals=e,this.isActionLoading=!1})).catch((()=>{this.isActionLoading=!1})),this.PayeverPaymentWrapperService.getOrderItems(this.orderId).then((e=>{let t=this.$tc("payever-order-buttons.shippingMethod");e.map((function(e){return e.checked=!0,"shipping"===e.item_type&&(e.label=t+" ("+e.label+")"),e.input={can_be_captured:e.can_be_captured,can_be_cancelled:e.can_be_cancelled,can_be_refunded:e.can_be_refunded},e})),this.orderItems=e,this.isActionLoading=!1})).catch((()=>{this.isActionLoading=!1}))):this.isActionLoading=!1}))},isPayeverPayment:e=>!!e.customFields&&e.customFields.payever_transaction_id,isActionPossible(e){return this.allowedActions&&this.allowedActions[e]},isAvailable(){let e=!1;return this.orderItems.map((function(t){t.quantity>0&&(e=!0)})),e},isRefundItemAvailable(){let e=!1;return this.orderItems.map((function(t){t.quantity>0&&t.can_be_refunded>0&&(e=!0)})),e},isShippingGoodsAvailable(){let e=!1;return this.orderItems.map((function(t){t.quantity>0&&t.can_be_captured>0&&(e=!0)})),e},isCancelItemAvailable(){let e=!1;return this.orderItems.map((function(t){t.quantity>0&&t.can_be_cancelled>0&&(e=!0)})),e},isShippingGoodsAmountAction(e){return this.isAvailable()&&"shipping_goods"===e},isRefundAmountAction(e){return this.isAvailable()&&"refund"===e},isCancelAction(e){return this.isAvailable()&&"cancel"===e},isRefundItemAction(e){return this.isAvailable()&&"refundItem"===e},isCancelItemAction(e){return this.isAvailable()&&"cancelItem"===e},isShippingGoodsAction(e){return this.isAvailable()&&"shippingGoods"===e},isManualActionApplied(){return this.paymentTotals.isManual},getAvailableAmountForCapturing(){return this.paymentTotals.availableForCapturing},getAvailableAmountForCancelling(){return this.paymentTotals.availableForCancelling},getAvailableAmountForRefunding(){return this.paymentTotals.availableForRefunding},doTransactionAction(e,t,n){if(!this.isPayeverPayment(t))return;this.isActionLoading=!0;let i={transaction:t.id};if(this.isShippingGoodsAction(n)){let e=0,t={};this.$refs.itemIdCapture.forEach((n=>{this.$refs.checkboxCapture[e].value&&(t[n.value]=this.$refs.quantityCapture[e].value),e++})),i.items=t}if(this.isRefundItemAction(n)){let e=0,t={};this.$refs.itemIdRefund.forEach((n=>{this.$refs.checkboxRefund[e].value&&(t[n.value]=this.$refs.quantityRefund[e].value),e++})),i.items=t}if(this.isCancelItemAction(n)){let e=0,t={};this.$refs.itemIdCancel.forEach((n=>{this.$refs.checkboxCancel[e].value&&(t[n.value]=this.$refs.quantityCancel[e].value),e++})),i.items=t}if(this.isShippingGoodsAmountAction(n)){let t=0;if(this.$refs.hasOwnProperty("payeverCapture")&&(t=this.$refs.payeverCapture[0].value,(!t||"string"==typeof t&&0===t.length)&&(t=this.getAvailableAmountForCapturing()),("string"==typeof t||t instanceof String)&&(t=t.replace(",",".")),isNaN(t)||t>e.amountTotal||t>this.getAvailableAmountForCapturing()))return this.createNotificationError({title:this.$tc("payever-order-buttons.amountErrorTitle"),message:this.$tc("payever-order-buttons.amountErrorMessage")}),void(this.isActionLoading=!1);i.amount=t}if(this.isRefundAmountAction(n)){let t=0;if(this.$refs.hasOwnProperty("payeverRefund")&&(t=this.$refs.payeverRefund[0].value,(!t||"string"==typeof t&&0===t.length)&&(t=this.getAvailableAmountForRefunding()),("string"==typeof t||t instanceof String)&&(t=t.replace(",",".")),isNaN(t)||t>e.amountTotal||t>this.getAvailableAmountForRefunding()))return this.createNotificationError({title:this.$tc("payever-order-buttons.amountErrorTitle"),message:this.$tc("payever-order-buttons.amountErrorMessage")}),void(this.isActionLoading=!1);i.amount=t}if(this.isCancelAction(n)){let t=0;if(this.$refs.hasOwnProperty("payeverCancel")&&(t=this.$refs.payeverCancel[0].value,(!t||"string"==typeof t&&0===t.length)&&(t=this.getAvailableAmountForCancelling()),("string"==typeof t||t instanceof String)&&(t=t.replace(",",".")),isNaN(t)||t>e.amountTotal||t>this.getAvailableAmountForCancelling()))return this.createNotificationError({title:this.$tc("payever-order-buttons.amountErrorTitle"),message:this.$tc("payever-order-buttons.amountErrorMessage")}),void(this.isActionLoading=!1);i.amount=t}var s=this;this.PayeverPaymentWrapperService.doPaymentAction(n,i).then((()=>{s.isActionLoading=!1,this.createNotificationSuccess({title:this.$tc(`payever-order-buttons.${n}.successTitle`),message:this.$tc(`payever-order-buttons.${n}.successMessage`)}),setTimeout((function(){location.reload()}),5e3),this.updateAllowedActions()})).catch((e=>{s.isActionLoading=!1,e.response?this.createNotificationError({title:this.$tc(`payever-order-buttons.${n}.errorTitle`),message:e.response.data.message}):e.request?console.warn(e.request):(console.warn(e.message),this.createNotificationError({title:this.$tc(`payever-order-buttons.${n}.errorTitle`),message:this.$tc(`payever-order-buttons.${n}.errorTitle`)}))}))},hasPayeverPayment(e){const t=this;let n=!1;return!!e.transactions&&(e.transactions.map((function(e){t.isPayeverPayment(e)&&(n=!0)})),n)}}});var U=n("kdr2"),H=n("mRdY");const{Module:Z}=Shopware;Z.register("payever-payment",{type:"plugin",name:"payever",description:"description",version:"1.0.0",targetVersion:"1.0.0",snippets:{"de-DE":U,"en-GB":H},routeMiddleware(e,t){e(t)}})},H44w:function(e,t,n){},IGf9:function(e,t,n){var i=n("H44w");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,n("SZ7m").default)("37f7974d",i,!0,{})},MyiK:function(e,t,n){},kdr2:function(e){e.exports=JSON.parse('{"payever-order-buttons":{"title":"payever Zahlung","amountErrorTitle":"Invalid amount","amountErrorMessage":"Invalid amount","shippingMethod":"Shipping costs","paid":"Paid","captured":"Captured","refunded":"Refunded","cancelled":"Cancelled","shipping_goods":{"buttonTitle":"Ware versendet (Capture) ","successTitle":"payever Zahlung","successMessage":"Der Warenversand wurde erfolgreich an den Zahlungsdienstleister gemeldet.","errorTitle":"Der Warenversand konnte nicht an den Zahlungsdienstleister gemeldet werden.","amount":"Shipping amount"},"cancel":{"buttonTitle":"Komplett stornieren","successTitle":"payever Zahlung","successMessage":"Die Stornierung Ihrer Zahlung wurde erfolgreich verarbeitet.","errorTitle":"Die Stornierung Ihrer Zahlung ist fehlgeschlagen.","amount":"Betrag für Teilstornierung. Geben Sie zum vollständigen Abbrechen 0 ein oder lassen Sie das Feld leer."},"refund":{"buttonTitle":"Obigen Betrag erstatten","successTitle":"payever Zahlung","successMessage":"Die Erstattung Ihrer Zahlung wurde erfolgreich verarbeitet.","errorTitle":"Die Erstattung Ihrer Zahlung ist fehlgeschlagen.","amount":"Zu erstattender Betrag"},"refundItem":{"title":"Refund items","buttonTitle":"Artikel zurückerstatten","successTitle":"payever Payment","successMessage":"Artikelrückerstattung wurde erfolgreich verarbeitet.","errorTitle":"Artikelrückerstattung wurde nicht erfolgreich verarbeitet.","quantity":"Rückerstattungsmenge"},"shippingGoods":{"title":"Shipping goods","buttonTitle":"Ship goods","successTitle":"payever Payment","successMessage":"Shipping goods has been processed successfully.","errorTitle":"Shipping goods hasn\'t been processed successfully.","quantity":"Shipping Quantity"},"cancelItem":{"title":"Cancel items","buttonTitle":"Cancel items","successTitle":"payever Payment","successMessage":"Cancelling has been processed successfully.","errorTitle":"Cancelling hasn\'t been processed successfully.","quantity":"Cancel Quantity"},"transaction":"Transaction ID","pan":"PAN","transactionState":"Status"},"payever-plugin-config":{"synchronize":{"buttonTitle":"Synchronize","successTitle":"Synchronisierung","successMessage":"Die Synchronisierung war erfolgreich.","noticeTitle":"Nachricht","errorTitle":"Die Synchronisierung ist fehlgeschlagen.","wrongCredentials":"Synchronisierung fehlgeschlagen - bitte prüfen Sie, ob Ihre Daten stimmig sind und zum Modus passen (Live/Sandbox)"},"setApi":{"buttonTitle":"Sandbox API-Schlüssel eintragen","successTitle":"Erfolg","successMessage":"Sandbox API-Schlüssel erfolgreich eintragen"},"support":{"buttonTitle":"Hilfe benötigt? Kontaktiere uns!","message":"Unser kostenloser deutsch- und englisch-sprachiger Tech Support ist Montags bis Freitags zwischen 8 und 19 Uhr für dich da. Wenn du ein bestimmtes technisches Problem melden möchtest, erwähne in deiner Nachricht an uns bitte deine Shopware Version und die Version deines payever Plugins. Füge deiner Nachricht bitte auch die Plugin-Logs bei."},"downloadLog":{"buttonTitle":"Protokoll herunterladen"},"productSynchronization":{"title":"Produkt Synchronisierung","subscriptionEnableTitle":"Aktivieren","subscriptionDisableTitle":"Deaktivieren","subscriptionFailedTitle":"Abonnementvorgang kann nicht ausgeführt werden","subscriptionEnabledSuccessMessage":"Die Synchronisation wurde aktiviert","subscriptionDisabledSuccessMessage":"Die Synchronisation wurde deaktiviert","exportSuccessMessage":"Der Export von Produkten und Lagerbeständen wurde in die Warteschlange gestellt","exportButtonTitle":"Exportieren Sie Shopware-Produkte"}}}')},lUXN:function(e,t,n){var i=n("MyiK");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,n("SZ7m").default)("42aa0a52",i,!0,{})},mRdY:function(e){e.exports=JSON.parse('{"payever-order-buttons":{"title":"payever payment","amountErrorTitle":"Invalid amount","amountErrorMessage":"Invalid amount","shippingMethod":"Shipping costs","paid":"Paid","captured":"Captured","refunded":"Refunded","cancelled":"Cancelled","shipping_goods":{"buttonTitle":"Ship goods","successTitle":"payever Payment","successMessage":"Shipping goods has been processed successfully.","errorTitle":"Shipping goods hasn\'t been processed successfully.","amount":"Shipping amount"},"cancel":{"buttonTitle":"Cancel","successTitle":"payever Payment","successMessage":"Cancel has been processed successfully.","errorTitle":"Cancel hasn\'t been processed successfully.","amount":"Amount for Partial Cancel. For full cancel, enter 0 or leave blank."},"refund":{"buttonTitle":"Refund","successTitle":"payever Payment","successMessage":"Refund has been processed successfully.","errorTitle":"Refund hasn\'t been processed successfully.","amount":"Refund amount"},"refundItem":{"title":"Refund items","buttonTitle":"Refund Items","successTitle":"payever Payment","successMessage":"Item Refund has been processed successfully.","errorTitle":"Item Refund hasn\'t been processed successfully.","quantity":"Refund Quantity"},"shippingGoods":{"title":"Shipping goods","buttonTitle":"Ship goods","successTitle":"payever Payment","successMessage":"Shipping goods has been processed successfully.","errorTitle":"Shipping goods hasn\'t been processed successfully.","quantity":"Shipping Quantity"},"cancelItem":{"title":"Cancel items","buttonTitle":"Cancel items","successTitle":"payever Payment","successMessage":"Cancelling has been processed successfully.","errorTitle":"Cancelling hasn\'t been processed successfully.","quantity":"Cancel Quantity"},"transaction":"Transaction ID","pan":"PAN","transactionState":"State"},"payever-plugin-config":{"synchronize":{"buttonTitle":"Synchronize","successTitle":"Synchronization","successMessage":"Synchronization has been processed successfully.","noticeTitle":"Notice","errorTitle":"Synchronization hasn\'t been processed successfully.","wrongCredentials":"Could not synch - please check if the credentials you entered are correct and match the mode (live/sandbox)"},"setApi":{"buttonTitle":"Set up sandbox API Keys","successTitle":"Success","successMessage":"You set up sandbox API Keys successfully."},"support":{"buttonTitle":"Need help? Chat with us!","message":"Our free english and german speaking support is there for you from Monday to Friday, 8am-7pm. If you want to report a specific technical problem, please include your Shopware version and payever plugin version in your message to us, and attach your plugin logs to it."},"downloadLog":{"buttonTitle":"Download log"},"productSynchronization":{"title":"Products Synchronization","subscriptionEnableTitle":"Enable","subscriptionDisableTitle":"Disable","subscriptionFailedTitle":"Unable to perform subscription operation","subscriptionEnabledSuccessMessage":"Synchronization has been enabled","subscriptionDisabledSuccessMessage":"Synchronization has been disabled","exportSuccessMessage":"Products and inventory export has been enqueued","exportButtonTitle":"Export Shopware products"}}}')},obeB:function(e,t){e.exports='{% block sw_plugin_config_actions_save %}\n<sw-button :isLoading="isLoading"\n           class="sw-plugin-config__set-sandbox-action"\n           @click.prevent="setSandboxApiKeys"\n           v-if="namespace === \'PevrPayeverIntegration\'">\n    {{ $tc(\'payever-plugin-config.setApi.buttonTitle\') }}\n</sw-button>\n<sw-button :isLoading="isLoading"\n           class="sw-plugin-config__save-action"\n           @click.prevent="onSync"\n           :disabled="isLoading || !clientSecretFilled || !clientIdFilled || !businessIdFilled"\n           v-if="namespace === \'PevrPayeverIntegration\'">\n    {{ $tc(\'payever-plugin-config.synchronize.buttonTitle\') }}\n</sw-button>\n<sw-button :isLoading="isLoading"\n           class="sw-plugin-config__download_log-action"\n           @click.prevent="downloadLog"\n           :disabled="isLoading"\n           v-if="namespace === \'PevrPayeverIntegration\'">\n    {{ $tc(\'payever-plugin-config.downloadLog.buttonTitle\') }}\n</sw-button>\n{% parent %}\n{% endblock %}\n{% block sw_system_config %}\n<sw-alert variant="info"  v-if="namespace === \'PevrPayeverIntegration\'">\n    {{ $tc(\'payever-plugin-config.support.message\') }}\n    <br><br>\n    <sw-button  :isLoading="isLoading"\n                class="sw-system-config_support"\n                @click.prevent="support" >\n        {{ $tc(\'payever-plugin-config.support.buttonTitle\') }}\n    </sw-button>\n</sw-alert>\n<br><br>\n{% parent %}\n{% endblock %}\n\n'},qnkV:function(e,t){e.exports='{% block sw_products_and_inventory_export %}\n<sw-button :isLoading="isLoading"\n           class="sw-products-and-inventory-buttons-export-button"\n           @click.prevent="enqueueProductsAndInventoryExport"\n           :disabled="isLoading || !isProductsSyncEnabledFilled || !isProductsOutwardSyncEnabledFilled">\n    {{ $tc(\'payever-plugin-config.productSynchronization.exportButtonTitle\') }}\n</sw-button>\n{% endblock %}\n'},rSPY:function(e,t){e.exports='{% block sw_products_and_inventory_toggle_subscription %}\n<sw-button :isLoading="isLoading"\n           class="sw-products-and-inventory-toggle-subscription-button"\n           @click.prevent="toggleSubscription">\n    {{ $tc(\'payever-plugin-config.productSynchronization.subscriptionEnableTitle\') }}\n</sw-button>\n{% endblock %}\n'},uO5R:function(e,t){e.exports='{% block sw_order_detail_base_status_card %}\n    {% parent %}\n    <template>\n        <template v-if="hasPayeverPayment(order)">\n            <sw-card class="sw-order-payever-card" :title="$tc(\'payever-order-buttons.title\')">\n                <template v-for="transaction in order.transactions">\n                    <template v-if="isPayeverPayment(transaction)">\n                        <sw-container columns="repeat(auto-fit, minmax(250px, 1fr)" gap="0 30px">\n                            <sw-description-list>\n                                <dt v-if="transaction.customFields.payever_transaction_id">\n                                    {{ $tc(\'payever-order-buttons.transaction\') }}\n                                </dt>\n                                <dd v-if="transaction.customFields.payever_transaction_id">\n                                    {{ transaction.customFields.payever_transaction_id }}\n                                </dd>\n                                <dt v-if="transaction.customFields.payever_pan_id">\n                                    {{ $tc(\'payever-order-buttons.pan\') }}\n                                </dt>\n                                <dd v-if="transaction.customFields.payever_pan_id">\n                                    {{ transaction.customFields.payever_pan_id }}\n                                </dd>\n                                {# Total amounts #}\n                                <dt v-if="paymentTotals.amount > 0">\n                                    {{ $tc(\'payever-order-buttons.paid\') }}\n                                </dt>\n                                <dd v-if="paymentTotals.amount > 0">\n                                    {{ paymentTotals.amount | currency(order.currency.shortName) }}\n                                </dd>\n                                <dt v-if="paymentTotals.captured > 0">\n                                    {{ $tc(\'payever-order-buttons.captured\') }}\n                                </dt>\n                                <dd v-if="paymentTotals.captured > 0">\n                                    {{ paymentTotals.captured | currency(order.currency.shortName) }}\n                                </dd>\n                                <dt v-if="paymentTotals.refunded > 0">\n                                    {{ $tc(\'payever-order-buttons.refunded\') }}\n                                </dt>\n                                <dd v-if="paymentTotals.refunded > 0">\n                                    {{ paymentTotals.refunded | currency(order.currency.shortName) }}\n                                </dd>\n                                <dt v-if="paymentTotals.cancelled > 0">\n                                    {{ $tc(\'payever-order-buttons.cancelled\') }}\n                                </dt>\n                                <dd v-if="paymentTotals.cancelled > 0">\n                                    {{ paymentTotals.cancelled | currency(order.currency.shortName) }}\n                                </dd>\n                            </sw-description-list>\n\n                            <sw-container gap="10px">\n                                <sw-text-field v-if="isActionPossible(\'shipping_goods\') && isActionPossible(\'partialShipping\') && paymentTotals.availableForCapturing > 0" :label="$tc(\'payever-order-buttons.shipping_goods.amount\')" ref="payeverCapture" v-model="input.capture"></sw-text-field>\n                                <sw-button id="pe_ship" :isLoading="isActionLoading" v-if="isActionPossible(\'shipping_goods\')" @click="doTransactionAction(order, transaction, \'shipping_goods\')">\n                                    {{ $tc(\'payever-order-buttons.shipping_goods.buttonTitle\') }}\n                                </sw-button>\n                                <sw-text-field v-if="isActionPossible(\'cancel\') && isActionPossible(\'partialCancel\') && paymentTotals.availableForCancelling > 0" :label="$tc(\'payever-order-buttons.cancel.amount\')" ref="payeverCancel" v-model="input.cancel"></sw-text-field>\n                                <sw-button id="pe_cancel" :isLoading="isActionLoading" v-if="isActionPossible(\'cancel\')" @click="doTransactionAction(order, transaction, \'cancel\')">\n                                    {{ $tc(\'payever-order-buttons.cancel.buttonTitle\') }}\n                                </sw-button>\n                                <sw-text-field v-if="(isActionPossible(\'refund\') && isActionPossible(\'partialRefund\')) && paymentTotals.availableForRefunding > 0" :label="$tc(\'payever-order-buttons.refund.amount\')" ref="payeverRefund" v-model="input.refund"></sw-text-field>\n                                <sw-button id="pe_refund" :isLoading="isActionLoading" v-if="isActionPossible(\'refund\') && paymentTotals.availableForRefunding > 0" @click="doTransactionAction(order, transaction, \'refund\')">\n                                    {{ $tc(\'payever-order-buttons.refund.buttonTitle\') }}\n                                </sw-button>\n                            </sw-container>\n                        </sw-container>\n\n                        {# Shipping Goods Items #}\n                        <template v-if="!isManualActionApplied() && isShippingGoodsAvailable() && isActionPossible(\'shipping_goods\') && isActionPossible(\'partialShipping\')">\n                            <sw-description-list>\n                                <dt>\n                                    {{ $tc(\'payever-order-buttons.shippingGoods.title\') }}\n                                </dt>\n                                <dd></dd>\n                            </sw-description-list>\n\n                            <template v-for="item in orderItems">\n                                <sw-description-list v-if="item.can_be_captured > 0 && item.unit_price > 0">\n                                    <dt>\n                                        <sw-field type="switch"\n                                                  :label="item.label"\n                                                  ref="checkboxCapture"\n                                                  v-model="item.checked">\n                                        </sw-field>\n                                    </dt>\n                                    <dd></dd>\n                                    <dt class="hiddenField">\n                                        <sw-field ref="itemIdCapture"\n                                                  v-model="item.id">\n                                        </sw-field>\n                                    </dt>\n                                    <dd></dd>\n                                </sw-description-list>\n\n                                <sw-container gap="10px" v-if="item.can_be_captured > 0 && item.unit_price > 0">\n                                    <sw-number-field\n                                            v-show="item.item_type === \'product\'"\n                                            :label="$tc(\'payever-order-buttons.shippingGoods.quantity\')"\n                                            :min="1"\n                                            :max="item.can_be_captured"\n                                            ref="quantityCapture"\n                                            v-model="item.input.can_be_captured">\n                                    </sw-number-field>\n                                </sw-container>\n                            </template>\n\n                            <sw-container gap="10px">\n                                <sw-button id="pe_ship_item" :isLoading="isActionLoading" @click="doTransactionAction(order, transaction, \'shippingGoods\')">\n                                    {{ $tc(\'payever-order-buttons.shippingGoods.buttonTitle\') }}\n                                </sw-button>\n                            </sw-container>\n                        </template>\n\n                        {# Cancel Items #}\n                        <template v-if="!isManualActionApplied() && isCancelItemAvailable() && isActionPossible(\'cancel\') && isActionPossible(\'partialCancel\')">\n                            <sw-description-list>\n                                <dt>\n                                    {{ $tc(\'payever-order-buttons.cancelItem.title\') }}\n                                </dt>\n                                <dd></dd>\n                            </sw-description-list>\n\n                            <template v-for="item in orderItems">\n                                <sw-description-list v-if="item.can_be_cancelled > 0 && item.unit_price > 0">\n                                    <dt>\n                                        <sw-field type="switch"\n                                                  :label="item.label"\n                                                  ref="checkboxCancel"\n                                                  v-model="item.checked">\n                                        </sw-field>\n                                    </dt>\n                                    <dd></dd>\n                                    <dt class="hiddenField">\n                                        <sw-field ref="itemIdCancel"\n                                                  v-model="item.id">\n                                        </sw-field>\n                                    </dt>\n                                    <dd></dd>\n                                </sw-description-list>\n\n                                <sw-container gap="10px" v-if="item.can_be_cancelled > 0 && item.unit_price > 0">\n                                    <sw-number-field\n                                            v-show="item.item_type === \'product\'"\n                                            :label="$tc(\'payever-order-buttons.cancelItem.quantity\')"\n                                            :min="1"\n                                            :max="item.can_be_cancelled"\n                                            ref="quantityCancel"\n                                            v-model="item.input.can_be_cancelled">\n                                    </sw-number-field>\n                                </sw-container>\n                            </template>\n\n                            <sw-container gap="10px">\n                                <sw-button id="pe_cancel_item" :isLoading="isActionLoading" @click="doTransactionAction(order, transaction, \'cancelItem\')">\n                                    {{ $tc(\'payever-order-buttons.cancelItem.buttonTitle\') }}\n                                </sw-button>\n                            </sw-container>\n                        </template>\n\n                        {# Refund Items #}\n                        <template v-if="!isManualActionApplied() && isRefundItemAvailable() && isActionPossible(\'refundItem\') && isActionPossible(\'partialRefund\')">\n                            <sw-description-list>\n                                <dt>\n                                    {{ $tc(\'payever-order-buttons.refundItem.title\') }}\n                                </dt>\n                                <dd></dd>\n                            </sw-description-list>\n                            <template v-for="item in orderItems">\n                                <sw-description-list v-if="item.can_be_refunded > 0 && item.unit_price > 0">\n                                    <dt>\n                                        <sw-field type="switch"\n                                                  :label="item.label"\n                                                  ref="checkboxRefund"\n                                                  v-model="item.checked">\n                                        </sw-field>\n                                    </dt>\n                                    <dd></dd>\n                                    <dt class="hiddenField">\n                                        <sw-field ref="itemIdRefund"\n                                                  v-model="item.id">\n                                        </sw-field>\n                                    </dt>\n                                    <dd></dd>\n                                </sw-description-list>\n\n                                <sw-container gap="10px" v-if="item.can_be_refunded > 0 && item.unit_price > 0">\n                                    <sw-number-field\n                                            v-show="item.item_type === \'product\'"\n                                            :label="$tc(\'payever-order-buttons.refundItem.quantity\')"\n                                            :min="1"\n                                            :max="item.can_be_refunded"\n                                            ref="quantityRefund"\n                                            v-model="item.input.can_be_refunded">\n                                    </sw-number-field>\n                                </sw-container>\n                            </template>\n\n                            <sw-container gap="10px">\n                                <sw-button id="pe_refund_item" :isLoading="isActionLoading" @click="doTransactionAction(order, transaction, \'refundItem\')">\n                                    {{ $tc(\'payever-order-buttons.refundItem.buttonTitle\') }}\n                                </sw-button>\n                            </sw-container>\n                        </template>\n                    </template>\n                </template>\n            </sw-card>\n        </template>\n        <sw-loader v-if="isActionLoading"></sw-loader>\n    </template>\n{% endblock %}\n'}},[["ACkG","runtime","vendors-node"]]]);